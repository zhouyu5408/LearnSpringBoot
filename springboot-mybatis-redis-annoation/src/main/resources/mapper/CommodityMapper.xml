<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ssm.dao.CommodityMapper">
  <resultMap id="BaseResultMap" type="com.example.ssm.domain.Commodity">
    <id column="commodity_id" jdbcType="VARCHAR" property="commodityId" />
    <result column="commodity_name" jdbcType="VARCHAR" property="commodityName" />
    <result column="commodity_type" jdbcType="VARCHAR" property="commodityType" />
    <result column="commodity_price" jdbcType="INTEGER" property="commodityPrice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    commodity_id, commodity_name, commodity_type, commodity_price
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sb_commodity
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sb_commodity
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
  </delete>
 
  <insert id="insert" parameterType="com.example.ssm.domain.Commodity">
    insert into sb_commodity (commodity_id, commodity_name, commodity_type, 
      commodity_price)
    values (#{commodityId,jdbcType=VARCHAR}, #{commodityName,jdbcType=VARCHAR}, #{commodityType,jdbcType=VARCHAR}, 
      #{commodityPrice,jdbcType=INTEGER})
  </insert>
  
  <insert id="insertSelective" parameterType="com.example.ssm.domain.Commodity">
    insert into sb_commodity
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="commodityId != null">
        commodity_id,
      </if>
      <if test="commodityName != null">
        commodity_name,
      </if>
      <if test="commodityType != null">
        commodity_type,
      </if>
      <if test="commodityPrice != null">
        commodity_price,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="commodityId != null">
        #{commodityId,jdbcType=VARCHAR},
      </if>
      <if test="commodityName != null">
        #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="commodityType != null">
        #{commodityType,jdbcType=VARCHAR},
      </if>
      <if test="commodityPrice != null">
        #{commodityPrice,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ssm.domain.Commodity">
    update sb_commodity
    <set>
      <if test="commodityName != null">
        commodity_name = #{commodityName,jdbcType=VARCHAR},
      </if>
      <if test="commodityType != null">
        commodity_type = #{commodityType,jdbcType=VARCHAR},
      </if>
      <if test="commodityPrice != null">
        commodity_price = #{commodityPrice,jdbcType=INTEGER},
      </if>
    </set>
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.example.ssm.domain.Commodity">
    update sb_commodity
    set commodity_name = #{commodityName,jdbcType=VARCHAR},
      commodity_type = #{commodityType,jdbcType=VARCHAR},
      commodity_price = #{commodityPrice,jdbcType=INTEGER}
    where commodity_id = #{commodityId,jdbcType=VARCHAR}
  </update>
</mapper>