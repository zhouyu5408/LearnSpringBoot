<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.ssm.dao.OrderMapper">
	<resultMap id="BaseResultMap" type="com.example.ssm.domain.Order">
		<id column="order_id" jdbcType="VARCHAR" property="orderId" />
		<result column="order_start_time" jdbcType="TIMESTAMP"
			property="orderStartTime" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="commodity_id" jdbcType="VARCHAR" property="commodityId" />
		<result column="order_number" jdbcType="INTEGER" property="orderNumber" />
		<result column="order_total_prices" jdbcType="INTEGER"
			property="orderTotalPrices" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		order_id, order_start_time, user_id, commodity_id, order_number,
		order_total_prices
	</sql>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from sb_order
		where order_id = #{orderId,jdbcType=VARCHAR}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sb_order
		where order_id = #{orderId,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="com.example.ssm.domain.Order">
		insert into sb_order (order_id, order_start_time, user_id,
		commodity_id, order_number, order_total_prices
		)
		values (#{orderId,jdbcType=VARCHAR}, #{orderStartTime,jdbcType=TIMESTAMP},
		#{userId,jdbcType=VARCHAR},
		#{commodityId,jdbcType=VARCHAR}, #{orderNumber,jdbcType=INTEGER}, #{orderTotalPrices,jdbcType=INTEGER}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.example.ssm.domain.Order">
		insert into sb_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				order_id,
			</if>
			<if test="orderStartTime != null">
				order_start_time,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="commodityId != null">
				commodity_id,
			</if>
			<if test="orderNumber != null">
				order_number,
			</if>
			<if test="orderTotalPrices != null">
				order_total_prices,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				#{orderId,jdbcType=VARCHAR},
			</if>
			<if test="orderStartTime != null">
				#{orderStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="commodityId != null">
				#{commodityId,jdbcType=VARCHAR},
			</if>
			<if test="orderNumber != null">
				#{orderNumber,jdbcType=INTEGER},
			</if>
			<if test="orderTotalPrices != null">
				#{orderTotalPrices,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>




	<update id="updateByPrimaryKeySelective" parameterType="com.example.ssm.domain.Order">
		update sb_order
		<set>
			<if test="orderStartTime != null">
				order_start_time = #{orderStartTime,jdbcType=TIMESTAMP},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="commodityId != null">
				commodity_id = #{commodityId,jdbcType=VARCHAR},
			</if>
			<if test="orderNumber != null">
				order_number = #{orderNumber,jdbcType=INTEGER},
			</if>
			<if test="orderTotalPrices != null">
				order_total_prices = #{orderTotalPrices,jdbcType=INTEGER},
			</if>
		</set>
		where order_id = #{orderId,jdbcType=VARCHAR}
	</update>

	<update id="updateByPrimaryKey" parameterType="com.example.ssm.domain.Order">
		update sb_order
		set order_start_time = #{orderStartTime,jdbcType=TIMESTAMP},
		user_id = #{userId,jdbcType=VARCHAR},
		commodity_id = #{commodityId,jdbcType=VARCHAR},
		order_number = #{orderNumber,jdbcType=INTEGER},
		order_total_prices = #{orderTotalPrices,jdbcType=INTEGER}
		where order_id = #{orderId,jdbcType=VARCHAR}
	</update>

</mapper>